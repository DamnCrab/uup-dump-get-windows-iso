# Auto build Windows ISO using UUP Dump
# 使用 UUP Dump 自动构建 Windows ISO
name: build

on:
  workflow_dispatch: # Manual trigger / 手动触发
  schedule:
    - cron: '0 0 * * 0,3' # Run at 00:00 on Sunday and Wednesday / 每周日和周三的00:00运行

jobs:
  # Cleanup old artifacts / 清理旧的构建产物
  cleanup:
    runs-on: ubuntu-latest
    steps:
      - name: Purge old artifacts
        uses: kolpav/purge-artifacts-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          expire-in: 30d # Delete artifacts older than 30 days / 删除30天前的构建产物

  # Main build job / 主构建任务
  build:
    needs: cleanup
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        include:
          # Targets / 构建目标
          - name: windows-11-24h2-zh-cn-pro
          - name: windows-11-24h2-zh-cn-home
          - name: windows-11-24h2-zh-cn-multi
          - name: windows-11-24h2-en-us-pro
          - name: windows-11-24h2-en-us-home
          - name: windows-11-insider-zh-cn
          - name: windows-11-insider-en-us
          - name: windows-11-24h2-zh-cn-arm64
          - name: windows-11-24h2-zh-cn-enterprise
          - name: windows-11-24h2-zh-cn-education

    runs-on: windows-2025
    steps:
      # Random delay / 随机延时
      - name: Random delay
        shell: pwsh
        run: Start-Sleep -Seconds (Get-Random -Minimum 1 -Maximum 60)

      # Checkout code / 检出代码
      - name: Checkout
        uses: actions/checkout@v4

      # Install pnpm / 安装 pnpm
      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10
          run_install: false

      # Setup Node.js / 设置 Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '24'
          cache: 'pnpm'

      # Install dependencies / 安装依赖
      - name: Install dependencies
        run: pnpm install

      # Build ISO / 构建 ISO
      - name: Build ISO
        shell: pwsh
        run: |
          $pwshPath = Get-Command pwsh | Select-Object -ExpandProperty Source
          $pwshDir = Split-Path $pwshPath -Parent
          $env:Path = "$pwshDir;" + $env:Path
          pnpm start --target ${{ matrix.name }}

      # Upload artifacts / 上传构建产物
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            output/**/*.iso
            output/**/uup_monitor.log
          retention-days: 30 # Keep artifacts for 30 days / 构建产物保留30天

  # Create release / 创建发布
  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      # Generate release notes / 生成发布说明
      - name: Generate release notes
        run: |
          cat > release-notes.md <<EOF
          # 🖥️ Windows ISO Build - Run #${{ github.run_number }}

          **Build Date**: $(date -u +"%Y-%m-%d %H:%M UTC")
          **Workflow Run**: [Link to run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})

          ## 📥 Artifacts

          Click the links below to download the build artifacts. You must be logged into GitHub to download.

          | Build Target | Artifact Link |
          |--------------|---------------|
          | [windows-11-24h2-zh-cn-pro](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-24h2-zh-cn-pro) | Professional (Simplified Chinese) |
          | [windows-11-24h2-zh-cn-home](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-24h2-zh-cn-home) | Home (Simplified Chinese) |
          | [windows-11-24h2-zh-cn-multi](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-24h2-zh-cn-multi) | Multi-Edition (Simplified Chinese) |
          | [windows-11-24h2-en-us-pro](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-24h2-en-us-pro) | Professional (US English) |
          | [windows-11-24h2-en-us-home](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-24h2-en-us-home) | Home (US English) |
          | [windows-11-insider-zh-cn](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-insider-zh-cn) | Insider Preview (Simplified Chinese) |
          | [windows-11-insider-en-us](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-insider-en-us) | Insider Preview (US English) |
          | [windows-11-24h2-zh-cn-arm64](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-24h2-zh-cn-arm64) | ARM64 (Simplified Chinese) |
          | [windows-11-24h2-zh-cn-enterprise](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-24h2-zh-cn-enterprise) | Enterprise (Simplified Chinese) |
          | [windows-11-24h2-zh-cn-education](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/artifacts/windows-11-24h2-zh-cn-education) | Education (Simplified Chinese) |
          EOF

      # Create Release / 创建发布
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          bodyFile: "release-notes.md"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: "build-${{ github.run_number }}"
          name: "Build #${{ github.run_number }}"
